{"version":3,"sources":["webpack://WS/webpack/universalModuleDefinition","webpack://WS/webpack/bootstrap","webpack://WS/./node_modules/waveshaper/dist/waveshaper.js","webpack://WS/./src/config/dom-config.ts","webpack://WS/./src/config/hammerconfig.ts","webpack://WS/./src/core/domrender-waveshaper.ts","webpack://WS/./src/index.ts","webpack://WS/./src/interactions/cut.ts","webpack://WS/./src/interactions/drag.ts","webpack://WS/./src/interactions/enter.ts","webpack://WS/./src/interactions/pan.ts","webpack://WS/./src/interactions/resize.ts","webpack://WS/./src/interactions/zoom.ts","webpack://WS/./src/models/dragstate.ts","webpack://WS/./src/render/line.ts","webpack://WS/external {\"root\":\"Hammer\",\"commonjs2\":\"hammerjs\",\"commonjs\":\"hammerjs\",\"amd\":\"hammerjs\",\"umd\":\"hammerjs\"}"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA,QAKA;AACA,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gCAAgC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,kBAAkB;AAClF;AACA,yDAAyD,cAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,iCAAiC;AAClF,wHAAwH,mBAAmB,EAAE;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC,4BAA4B;;AAE7B;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;;AAEA;AACA,gBAAgB,yBAAyB;AACzC;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,eAAe,WAAW;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,aAAa,WAAW;AACxB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,WAAW;AACxB,eAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;;AAEA;AACA;AACA;AACA,aAAa,YAAY;AACzB,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0EAA0E,gEAAgE;AAC1I;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,WAAW;AACxB,eAAe,WAAW;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,+BAA+B,YAAY,uBAAuB;AAClE;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,WAAW;AACxB;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,OAAO;AACP,+BAA+B;AAC/B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT,iCAAiC,QAAQ,uBAAuB;AAChE;AACA;AACA;AACA;AACA,SAAS;AACT,iCAAiC,QAAQ,uBAAuB;AAChE;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gDAAgD,cAAc;;AAE9D,CAAC;;;AAGD,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,cAAc,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mCAAmC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,UAAU;AACvC,+BAA+B,WAAW;AAC1C,+BAA+B,4BAA4B;AAC3D,+BAA+B,WAAW;AAC1C;AACA,iCAAiC;AACjC;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,yBAAyB,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,yBAAyB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2EAA2E,EAAE;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2EAA2E,EAAE;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,aA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","file":"waveshaper-dom.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"hammerjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"hammerjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WS\"] = factory(require(\"hammerjs\"));\n\telse\n\t\troot[\"WS\"] = factory(root[\"Hammer\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_hammerjs__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"waveshaper\"] = factory();\n\telse\n\t\troot[\"waveshaper\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./node_modules/weighted-interval-merge/dist/weighted-interval-merge.js\":\n/*!******************************************************************************!*\\\n  !*** ./node_modules/weighted-interval-merge/dist/weighted-interval-merge.js ***!\n  \\******************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (global, factory) {\n   true ? factory(exports) :\n  undefined;\n}(this, (function (exports) { 'use strict';\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\r\n   * @typedef {Object} Interval\r\n   * \r\n   * @property {number} start\r\n   * @property {number} offsetStart\r\n   * @property {number} end\r\n   * @property {number} index\r\n   */\n\n  /**\r\n   * @typedef {{[key: string]: Interval}} IntervalMap\r\n   */\n\n  /**\r\n   * @param {Interval} interval\r\n   */\n  var calcStart = function calcStart(interval) {\n    return interval.start + interval.offsetStart;\n  };\n\n  /**\r\n   * The algorithm first calculates real start and end times of each segment,\r\n   * sorts them by priority, then start time.\r\n   *\r\n   * Finally it merges the segments by index so there are no overlapping\r\n   * segments and those with highest index are on top.\r\n   *\r\n   * @export\r\n   * @param {Interval[]} intervals Segments to flatten\r\n   * @returns {Interval[]} flattened Interval array\r\n   */\n  var weightedIntervalMerge = function weightedIntervalMerge(intervals) {\n    if (intervals == null || intervals.length === 0) return [];\n\n    var sorted = sort(intervals);\n    var normalized = normalizeIndex(sorted);\n    var copied = copy(normalized);\n    var grouped = groupByIndex(copied);\n\n    return weightedMerge(grouped);\n  };\n\n  /**\r\n   * Copies elements so original are unaltered\r\n   * \r\n   * @param {Interval[]} intervals \r\n   */\n  var copy = function copy(intervals) {\n    return intervals.map(function (i) {\n      return _extends({}, i, {\n        offsetStart: i.offsetStart || 0,\n        index: i.index || 1\n      });\n    });\n  };\n\n  /**\r\n   * When an element is altered the index is set very high,\r\n   * this functions normalizes to indexes back to 0\r\n   * \r\n   * @param {Intervalp[]} intervals \r\n   */\n  var normalizeIndex = function normalizeIndex(intervals) {\n    var index = 0;\n    var preNormalizeIndex = Number.MIN_SAFE_INTEGER;\n    intervals.forEach(function (el) {\n      if (el.index > preNormalizeIndex) {\n        preNormalizeIndex = el.index;\n        el.index = ++index;\n      } else {\n        el.index = index;\n      }\n    });\n    return intervals;\n  };\n\n  /**\r\n   * Sorts the intervals by index, then by start\r\n   * \r\n   * @param {Interval[]} intervals \r\n   * @return {Interval[]} Interval array\r\n   */\n  var sort = function sort(intervals) {\n    return intervals.sort(function (a, b) {\n      return cmp(a.index, b.index) || cmp(calcStart(a), calcStart(b));\n    });\n  };\n\n  /**\r\n   * Returns a map of intervals grouped by the key property\r\n   * \r\n   * @param {Interval[]} intervals \r\n   * @returns {IntervalMap} Map of index => interval[]\r\n   */\n  var groupByIndex = function groupByIndex(intervals) {\n    return intervals.reduce(function (groups, interval) {\n      (groups[interval.index] = groups[interval.index] || []).push(interval);\n      return groups;\n    }, {});\n  };\n\n  /**\r\n   * Merges all the groups by index\r\n   * \r\n   * @param {IntervalMap} grouped \r\n   * @returns {Interval[]} Interval array\r\n   */\n  var weightedMerge = function weightedMerge(grouped) {\n    var flattened = null;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = Object.keys(grouped)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var index = _step.value;\n\n        var merged = merge(grouped[index]);\n        if (flattened == null) {\n          flattened = merged;\n        } else {\n          flattened = combine(merged, flattened);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return flattened;\n  };\n\n  /**\r\n   * Merges a set of intervals with the same index and remove any overlaps, left to right\r\n   * \r\n   * @param {Interval[]} intervals \r\n   * @returns {Interval[]} Interval array\r\n   */\n  var merge = function merge(intervals) {\n    if (intervals.length <= 1) return intervals;\n\n    var result = [];\n\n    var current = intervals[0];\n    for (var i = 1; i < intervals.length; i++) {\n      var next = intervals[i];\n\n      // If current is completely overlapped by second it is merged into it\n      if (current.end >= next.end) {\n        continue;\n        // Resolves partial overlaps by setting end of current to start of next\n      } else if (calcStart(next) < current.end) {\n        result.push(_extends({}, current, { end: calcStart(next) }));\n        current = next;\n      } else {\n        // No overlap, push onto results\n        result.push(current);\n        current = next;\n      }\n    }\n\n    result.push(current);\n    return result;\n  };\n\n  /**\r\n   * Given two sets of intervals it merges them so the highIndexes set has priority\r\n   *\r\n   * @param {Interval[]} highIndexes\r\n   * @param {Interval[]} lowIndexes\r\n   * \r\n   * @returns {Interval[]} Interval array\r\n   */\n  var combine = function combine(highIndexes, lowIndexes) {\n    var highIndex = 0;\n    var lowIndex = 0;\n\n    var merged = [];\n\n    while (highIndex < highIndexes.length || lowIndex < lowIndexes.length) {\n\n      var high = highIndexes[highIndex];\n      var low = lowIndexes[lowIndex];\n\n      // Only low priority left so push low onto results\n      if (highIndex === highIndexes.length) {\n        merged.push(_extends({}, low));\n        lowIndex++;\n        // Only high priority left so push high onto results\n      } else if (lowIndex === lowIndexes.length) {\n        merged.push(_extends({}, high));\n        highIndex++;\n        // High priority start before or at same time as low\n      } else if (calcStart(high) <= calcStart(low)) {\n        // No overlap between low and high\n        // low:                 ----------------------\n        // high: ---------------\n        if (high.end <= calcStart(low)) ; else if (high.end < low.end) {\n          low.offsetStart = high.end - low.start;\n          // Low index completely overlapped, dismiss it\n          // low:               -----------\n          // high: -------------------------------------\n        } else {\n          lowIndex++;\n        }\n\n        merged.push(_extends({}, high));\n        highIndex++;\n        // Low priority starts before high\n      } else {\n        // No overlap between low and high intervals\n        // low: ---------------\n        // high                ----------------------\n        if (low.end <= calcStart(high)) {\n          merged.push(_extends({}, low));\n          lowIndex++;\n          // Partial overlap where high ends after low\n          // low: ---------------------\n          // high                ----------------------\n        } else if (high.end > low.end) {\n          merged.push(_extends({}, low, { end: calcStart(high) }));\n          lowIndex++;\n          // Partial overlap where high ends before low\n          // low: -------------------------------------\n          // high             -----------\n        } else {\n          merged.push(_extends({}, low, { end: calcStart(high) }));\n          low.offsetStart = high.end - low.start;\n        }\n      }\n    }\n\n    return merged;\n  };\n\n  /**\r\n   *\r\n   * @param {number} a\r\n   * @param {number} b\r\n   */\n  var cmp = function cmp(a, b) {\n    if (a > b) return +1;\n    if (a < b) return -1;\n    return 0;\n  };\n\n  exports.weightedIntervalMerge = weightedIntervalMerge;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n\n/***/ \"./src/config/managerconfig.ts\":\n/*!*************************************!*\\\n  !*** ./src/config/managerconfig.ts ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar defaultOptions = {\r\n    scrollPosition: 0,\r\n    samplesPerPixel: 1024,\r\n    resolution: 10,\r\n    meterType: 'rms',\r\n    width: 300,\r\n    samplerate: 44100\r\n};\r\nexports.default = defaultOptions;\r\n\n\n/***/ }),\n\n/***/ \"./src/core/track.ts\":\n/*!***************************!*\\\n  !*** ./src/core/track.ts ***!\n  \\***************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar peak_1 = __webpack_require__(/*! ../strategies/peak */ \"./src/strategies/peak.ts\");\r\nvar rms_1 = __webpack_require__(/*! ../strategies/rms */ \"./src/strategies/rms.ts\");\r\nvar weighted_interval_merge_1 = __webpack_require__(/*! weighted-interval-merge */ \"./node_modules/weighted-interval-merge/dist/weighted-interval-merge.js\");\r\nvar Track = /** @class */ (function () {\r\n    function Track(id, intervals, width) {\r\n        this.width = width;\r\n        this._lastValue = new Float32Array(this.width * 4);\r\n        this.id = id;\r\n        this.intervals = intervals || [];\r\n        this._flattened = weighted_interval_merge_1.weightedIntervalMerge(this.intervals);\r\n    }\r\n    Object.defineProperty(Track.prototype, \"flattened\", {\r\n        get: function () {\r\n            return this._flattened.slice();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Track.prototype.flatten = function () {\r\n        this._flattened = weighted_interval_merge_1.weightedIntervalMerge(this.intervals);\r\n    };\r\n    /**\r\n     * Gets the duration of the audio in seconds\r\n     *\r\n     * @returns Decimal value of total duration in seconds\r\n     */\r\n    Track.prototype.getDuration = function () {\r\n        return Math.max.apply(Math, this.intervals.map(function (s) { return s.end; }));\r\n    };\r\n    /**\r\n     * Gets the summerized values for the current settings\r\n     *\r\n     * @param options\r\n     * @param dataMap\r\n     * @returns Two dimensional array, one entry for each pixel, for each pixel a min\r\n     * and a max value.\r\n     */\r\n    Track.prototype.calculate = function (options, dataMap, start, width, shift) {\r\n        switch (options.meterType) {\r\n            case \"peak\":\r\n                this._lastValue = peak_1.default(options, this.flattened, dataMap, start, width, shift, this._lastValue);\r\n                break;\r\n            default:\r\n                this._lastValue = rms_1.default(options, this.flattened, dataMap, start, width, shift, this._lastValue);\r\n                break;\r\n        }\r\n        return this._lastValue;\r\n    };\r\n    return Track;\r\n}());\r\nexports.default = Track;\r\n\n\n/***/ }),\n\n/***/ \"./src/core/waveshaper.ts\":\n/*!********************************!*\\\n  !*** ./src/core/waveshaper.ts ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar track_1 = __webpack_require__(/*! ./track */ \"./src/core/track.ts\");\r\nvar managerconfig_1 = __webpack_require__(/*! ../config/managerconfig */ \"./src/config/managerconfig.ts\");\r\n/**\r\n *\r\n *\r\n * @export\r\n */\r\nvar WaveShaper = /** @class */ (function () {\r\n    /**\r\n     * @param [options=defaultOptions] Initial options\r\n     * @throws Throws an error if samplerate is null or NaN\r\n     */\r\n    function WaveShaper(options) {\r\n        if (options === void 0) { options = managerconfig_1.default; }\r\n        /**\r\n         * Map of waveshapers managed by the manager\r\n         *\r\n         * @readonly\r\n         * @memberof WaveShaper\r\n         */\r\n        this.tracks = new Map();\r\n        /**\r\n         * Map of audio data\r\n         *\r\n         * @readonly\r\n         * @memberof WaveShaper\r\n         */\r\n        this.audioData = new Map();\r\n        /**\r\n         * @description Map of callback functions\r\n         *\r\n         * @readonly\r\n         * @memberof WaveShaper\r\n         */\r\n        this.callbackMap = new Map();\r\n        /**\r\n         * @description Segment callback functions\r\n         *\r\n         * @readonly\r\n         * @memberof WaveShaper\r\n         */\r\n        this.segmentCallbackMap = new Array();\r\n        /**\r\n         * @description Options callbacks\r\n         *\r\n         * @readonly\r\n         * @memberof WaveShaper\r\n         */\r\n        this.optionsCallbacks = new Array();\r\n        this._activeWaveShapers = [];\r\n        this.validateOptions(options);\r\n        this._options = __assign({}, managerconfig_1.default, options);\r\n    }\r\n    Object.defineProperty(WaveShaper.prototype, \"options\", {\r\n        /**\r\n         * @description Currect settings\r\n         *\r\n         * @readonly\r\n         * @memberof WaveShaper\r\n         */\r\n        get: function () {\r\n            return __assign({}, this._options);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WaveShaper.prototype, \"activeWaveShapers\", {\r\n        /**\r\n         * @description Active id's, redraws when draw is called without argument\r\n         *\r\n         * @readonly\r\n         * @unused\r\n         * @memberof WaveShaper\r\n         */\r\n        get: function () {\r\n            return this._activeWaveShapers.slice();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WaveShaper.prototype, \"lastProcessResult\", {\r\n        /**\r\n         * @description Last result of calling process, argument given to all callbacks\r\n         *\r\n         * @readonly\r\n         * @memberof WaveShaper\r\n         */\r\n        get: function () {\r\n            return this._lastProcessResult;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(WaveShaper.prototype, \"duration\", {\r\n        /**\r\n         * @description Total duration of all tracks\r\n         *\r\n         * @readonly\r\n         * @memberof WaveShaper\r\n         */\r\n        get: function () {\r\n            return this._duration;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gives the position corresponding to a given time\r\n     *\r\n     * @param time\r\n     */\r\n    WaveShaper.prototype.timeToPosition = function (time) {\r\n        return (time * this._options.samplerate) / this._options.samplesPerPixel;\r\n    };\r\n    /**\r\n     * Gives the time corresponding to a given position\r\n     * @param position\r\n     */\r\n    WaveShaper.prototype.positionToTime = function (position) {\r\n        return ((position * this._options.samplesPerPixel) / this._options.samplerate);\r\n    };\r\n    /**\r\n     * @description Flattens the segments of the given waveshaper id\r\n     *\r\n     * @param id\r\n     * @returns WaveShaper instance\r\n     */\r\n    WaveShaper.prototype.flatten = function (ids) {\r\n        var _this = this;\r\n        if (ids === void 0) { ids = []; }\r\n        this.getProcessIds(ids).forEach(function (id) {\r\n            var waveShaper = _this.getTrack(id);\r\n            if (waveShaper != null)\r\n                waveShaper.flatten();\r\n        });\r\n        return this;\r\n    };\r\n    /**\r\n     * Processes all relevant WaveShapers and invokes registered callbacks\r\n     *\r\n     * @param ids Options array of id's to draw\r\n     * @param start Start position\r\n     * @param width Width to process\r\n     * @param shift Units to shift current data\r\n     *\r\n     * @returns WaveShaper instance\r\n     */\r\n    WaveShaper.prototype.process = function (ids, start, width, shift) {\r\n        if (ids === void 0) { ids = []; }\r\n        if (start === void 0) { start = 0; }\r\n        if (width === void 0) { width = this.options.width; }\r\n        if (shift === void 0) { shift = 0; }\r\n        var toProcess = this.getProcessIds(ids);\r\n        var options = __assign({}, this.options);\r\n        var data = [];\r\n        for (var i = 0; i < toProcess.length; i++) {\r\n            var id = toProcess[i];\r\n            var wave = this.getTrack(id);\r\n            if (wave == null)\r\n                continue;\r\n            var peaks = wave.calculate(options, this.audioData, start, width, shift);\r\n            data.push({ id: id, data: peaks });\r\n        }\r\n        // Invoke callbacks after returning value.\r\n        this._lastProcessResult = { options: options, data: data };\r\n        this.invokeCallbacks(this._lastProcessResult, start, width, shift);\r\n        return this;\r\n    };\r\n    /**\r\n     * Registers a callback that fires when the track with given id is processed\r\n     *\r\n     * @param id id of Track to register to\r\n     * @param callBack will be invoked when the given track is processed\r\n     *\r\n     * @returns WaveShaper instance\r\n     */\r\n    WaveShaper.prototype.on = function (id, callBack) {\r\n        var callbackArray = this.callbackMap.get(id);\r\n        if (callbackArray == null) {\r\n            this.callbackMap.set(id, [callBack]);\r\n        }\r\n        else {\r\n            callbackArray.push(callBack);\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Unregisters a callback from the given track, will no longer be called\r\n     *\r\n     * @param id id of Track to unregister from\r\n     * @param callBack callback to remove\r\n     *\r\n     * @returns WaveShaper instance\r\n     */\r\n    WaveShaper.prototype.off = function (id, callBack) {\r\n        var callbackArray = this.callbackMap.get(id);\r\n        if (callbackArray == null)\r\n            return this;\r\n        var index = callbackArray.indexOf(callBack);\r\n        if (index < 0)\r\n            return this;\r\n        callbackArray = callbackArray.splice(index, 1);\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a callback that is triggered when an Interval is updated\r\n     *\r\n     * @param cb Callback function\r\n     */\r\n    WaveShaper.prototype.onSegment = function (cb) {\r\n        this.segmentCallbackMap.push(cb);\r\n    };\r\n    /**\r\n     * Removes a previously added callback for the Interval update callback\r\n     *\r\n     * @param cb Callback function\r\n     */\r\n    WaveShaper.prototype.offSegment = function (cb) {\r\n        var index = this.segmentCallbackMap.indexOf(cb);\r\n        if (index !== -1) {\r\n            this.segmentCallbackMap.splice(index, 1);\r\n        }\r\n    };\r\n    /**\r\n     * Emits a segment update\r\n     *\r\n     * @param old Old interval\r\n     * @param changed Updated interval\r\n     */\r\n    WaveShaper.prototype.emitSegment = function (old, changed) {\r\n        this.segmentCallbackMap.forEach(function (cb) { return cb(old, changed); });\r\n    };\r\n    /**\r\n     * Adds a callback that is fired when options are updated\r\n     *\r\n     * @param cb Callback function\r\n     */\r\n    WaveShaper.prototype.onOptions = function (cb) {\r\n        this.optionsCallbacks.push(cb);\r\n    };\r\n    /**\r\n     * Removes a previously added callback\r\n     * @param cb Callback function\r\n     */\r\n    WaveShaper.prototype.offOptions = function (cb) {\r\n        var index = this.optionsCallbacks.indexOf(cb);\r\n        if (index !== -1) {\r\n            this.optionsCallbacks.splice(index, 1);\r\n        }\r\n    };\r\n    /**\r\n     * Emits an options update\r\n     *\r\n     * @param old Old options\r\n     * @param updated New options\r\n     */\r\n    WaveShaper.prototype.emitOptions = function (old, updated) {\r\n        this.optionsCallbacks.forEach(function (cb) { return cb(old, updated); });\r\n    };\r\n    /**\r\n     * @description Merges the given options into the current and returns updated options\r\n     *\r\n     * @param options A (partial) ManagerOptions object\r\n     * @returns WaveShaper instance\r\n     */\r\n    WaveShaper.prototype.setOptions = function (options) {\r\n        this.validateOptions(options);\r\n        var oldOptions = __assign({}, this.options);\r\n        this._options = __assign({}, oldOptions, options);\r\n        this.emitOptions(oldOptions, this.options);\r\n        return this;\r\n    };\r\n    /**\r\n     * @description Adds a waveshaper to the manager\r\n     *\r\n     * @param id id of WaveShaper\r\n     * @param segments Segments in wave\r\n     * @param color Background color of segments\r\n     *\r\n     * @returns WaveShaper instance\r\n     */\r\n    WaveShaper.prototype.setTracks = function () {\r\n        var tracks = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            tracks[_i] = arguments[_i];\r\n        }\r\n        for (var i = 0; i < tracks.length; i++) {\r\n            var track = tracks[i];\r\n            var foundWave = this.getTrack(track.id);\r\n            if (foundWave == null) {\r\n                var wave = new track_1.default(track.id, track.intervals, this._options.width);\r\n                this.tracks.set(track.id, wave);\r\n            }\r\n            else {\r\n                foundWave.intervals = track.intervals || [];\r\n                foundWave.flatten();\r\n            }\r\n        }\r\n        this._duration = this.getDuration();\r\n        return this;\r\n    };\r\n    /**\r\n     * @description Adds audio data to the waveshaper and redraws waveshapers using it\r\n     *\r\n     * @param id  Data id, refered to by source parameter of segments\r\n     * @param data AudioBuffer with audio data\r\n     *\r\n     * @returns WaveShaper instance\r\n     */\r\n    WaveShaper.prototype.setData = function () {\r\n        var _this = this;\r\n        var data = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            data[_i] = arguments[_i];\r\n        }\r\n        data.forEach(function (d) {\r\n            _this.audioData.set(d.id, d.data);\r\n        });\r\n        return this;\r\n    };\r\n    /**\r\n     * @description The given id's are set as the active waveshapers, process only processes these when set,\r\n     * call with no values to allways process all values (default)\r\n     *\r\n     * @param ids Waveshaper id's to set as active\r\n     *\r\n     * @returns WaveShaper instance\r\n     */\r\n    WaveShaper.prototype.setActive = function () {\r\n        var ids = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            ids[_i] = arguments[_i];\r\n        }\r\n        this._activeWaveShapers = ids;\r\n        return this;\r\n    };\r\n    /**\r\n     * @description Removes the waves and all callbacks with given id from the manager\r\n     *\r\n     * @param id\r\n     *\r\n     * @returns WaveShaper instance\r\n     */\r\n    WaveShaper.prototype.clearTracks = function () {\r\n        var _this = this;\r\n        var ids = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            ids[_i] = arguments[_i];\r\n        }\r\n        ids.forEach(function (id) {\r\n            _this.removeCallbacksById(id);\r\n            _this.tracks.delete(id);\r\n        });\r\n        return this;\r\n    };\r\n    /**\r\n     * @description Gets Track with given id\r\n     *\r\n     * @param id\r\n     * @returns Track with given ID\r\n     */\r\n    WaveShaper.prototype.getTrack = function (id) {\r\n        return this.tracks.get(id);\r\n    };\r\n    /**\r\n     * Validates given options\r\n     *\r\n     * @param options\r\n     * @returns true if valid, false if not\r\n     */\r\n    WaveShaper.prototype.validateOptions = function (options) {\r\n        var currentOptions = this._options || managerconfig_1.default;\r\n        if (!options.samplesPerPixel || options.samplesPerPixel <= 0) {\r\n            options.samplesPerPixel = currentOptions.samplesPerPixel;\r\n        }\r\n        if (!options.meterType) {\r\n            options.meterType = currentOptions.meterType;\r\n        }\r\n        if (!options.resolution || options.resolution <= 0) {\r\n            options.resolution = currentOptions.resolution;\r\n        }\r\n        if (!options.width || this.options.width <= 0) {\r\n            options.width = currentOptions.width;\r\n        }\r\n        if (!options.scrollPosition || this.options.scrollPosition <= 0) {\r\n            options.scrollPosition = currentOptions.scrollPosition;\r\n        }\r\n        if (!options.samplerate || this.options.samplerate <= 0) {\r\n            options.samplerate = currentOptions.samplerate;\r\n        }\r\n    };\r\n    /**\r\n     * Invokes all registered callbacks registered to a waveshaper id in the data list\r\n     *\r\n     * @param options\r\n     * @param data\r\n     */\r\n    WaveShaper.prototype.invokeCallbacks = function (result, start, width, shift) {\r\n        for (var i = 0; i < result.data.length; i++) {\r\n            var trackResult = result.data[i];\r\n            var callbacks = this.callbackMap.get(trackResult.id);\r\n            if (callbacks == null)\r\n                continue;\r\n            for (var j = 0; j < callbacks.length; j++) {\r\n                var callback = callbacks[j];\r\n                callback(result.options, new Float32Array(trackResult.data), start, width, shift);\r\n            }\r\n        }\r\n    };\r\n    WaveShaper.prototype.getProcessIds = function (ids) {\r\n        if (ids.length > 0)\r\n            return ids;\r\n        if (this._activeWaveShapers.length > 0)\r\n            return this._activeWaveShapers;\r\n        return Array.from(this.tracks.keys());\r\n    };\r\n    WaveShaper.prototype.removeCallbacksById = function (id) {\r\n        var callbackArray = this.callbackMap.get(id);\r\n        if (callbackArray == null)\r\n            return;\r\n        callbackArray.splice(0, callbackArray.length);\r\n        this.callbackMap.delete(id);\r\n    };\r\n    /**\r\n     * @description Returns the maximum duration of all the waveshapers managed by this class\r\n     *\r\n     * @returns Maximum duration in seconds\r\n     * @memberof WaveShaper\r\n     */\r\n    WaveShaper.prototype.getDuration = function () {\r\n        return Array.from(this.tracks.values()).reduce(function (maxDuration, waveShaper) {\r\n            var duration = waveShaper.getDuration();\r\n            return duration > maxDuration ? duration : maxDuration;\r\n        }, 0);\r\n    };\r\n    return WaveShaper;\r\n}());\r\nexports.default = WaveShaper;\r\n\n\n/***/ }),\n\n/***/ \"./src/index.ts\":\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar waveshaper_1 = __webpack_require__(/*! ./core/waveshaper */ \"./src/core/waveshaper.ts\");\r\nexports.WaveShaper = waveshaper_1.default;\r\nvar track_1 = __webpack_require__(/*! ./core/track */ \"./src/core/track.ts\");\r\nexports.Track = track_1.default;\r\nvar managerconfig_1 = __webpack_require__(/*! ./config/managerconfig */ \"./src/config/managerconfig.ts\");\r\nexports.defaultConfig = managerconfig_1.default;\r\nvar rms_1 = __webpack_require__(/*! ./strategies/rms */ \"./src/strategies/rms.ts\");\r\nexports.rms = rms_1.default;\r\nvar peak_1 = __webpack_require__(/*! ./strategies/peak */ \"./src/strategies/peak.ts\");\r\nexports.peak = peak_1.default;\r\n\n\n/***/ }),\n\n/***/ \"./src/strategies/peak.ts\":\n/*!********************************!*\\\n  !*** ./src/strategies/peak.ts ***!\n  \\********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Calculates peak values\r\n *\r\n * @export\r\n * @param resolution\r\n * @param samplesPerPixel\r\n * @param width\r\n * @param intervals\r\n * @param scrollPosition\r\n * @param sampleRate\r\n * @param dataMap\r\n * @returns\r\n */\r\nexports.default = (function (options, intervals, dataMap, startPosition, width, shift, lastValue) {\r\n    var sampleSize = Math.ceil(options.samplesPerPixel / options.resolution);\r\n    var start = options.scrollPosition * options.samplesPerPixel;\r\n    var startSecond = start / options.samplerate;\r\n    var secondsPerPixel = options.samplesPerPixel / options.samplerate;\r\n    var calcStartSecond = startSecond + startPosition * secondsPerPixel;\r\n    var calcEndSecond = calcStartSecond + width * secondsPerPixel;\r\n    var absShift = Math.abs(shift) * 4;\r\n    var shiftTarget = shift > 0 ? 0 : absShift;\r\n    var shiftStart = shift > 0 ? absShift : 0;\r\n    var peaks = new Float32Array(lastValue.buffer)\r\n        .copyWithin(shiftTarget, shiftStart)\r\n        .fill(0, startPosition * 4, (startPosition + width) * 4);\r\n    var currentIntervalIndex = intervals.findIndex(function (i) { return i.end > calcStartSecond && i.start + i.offsetStart < calcEndSecond; });\r\n    // There are no intervals in this range so return empty array\r\n    if (currentIntervalIndex === -1)\r\n        return peaks;\r\n    var maxIntervalIncrementIndex = intervals.length - 1;\r\n    var currentInterval = intervals[currentIntervalIndex];\r\n    var buffer = dataMap.get(currentInterval.source);\r\n    // For each pixel we display\r\n    for (var i = startPosition; i < startPosition + width; i++) {\r\n        var currentSecond = startSecond + i * secondsPerPixel;\r\n        if (currentSecond >= currentInterval.end) {\r\n            if (currentIntervalIndex === maxIntervalIncrementIndex) {\r\n                return peaks;\r\n            }\r\n            else {\r\n                currentInterval = intervals[++currentIntervalIndex];\r\n                buffer = dataMap.get(currentInterval.source);\r\n            }\r\n        }\r\n        if (currentInterval.start + currentInterval.offsetStart > currentSecond) {\r\n            peaks.set([0, 0, 0, 0], i * 4);\r\n            continue;\r\n        }\r\n        var startBorder = currentSecond - secondsPerPixel <\r\n            currentInterval.start + currentInterval.offsetStart;\r\n        var endBorder = currentSecond + secondsPerPixel > currentInterval.end;\r\n        var intervalBorder = startBorder || endBorder ? 1 : 0;\r\n        if (buffer == null) {\r\n            peaks.set([0, 0, intervalBorder, 1], i * 4);\r\n            continue;\r\n        }\r\n        var secondsIntoInterval = currentSecond - currentInterval.start;\r\n        var startSample = Math.floor(secondsIntoInterval * options.samplerate);\r\n        var endSample = startSample + options.samplesPerPixel;\r\n        var length_1 = buffer.length;\r\n        var loopEnd = length_1 < endSample ? length_1 : endSample;\r\n        // Cycle through the data-points relevant to the pixel\r\n        // Don't cycle through more than sampleSize frames per pixel.\r\n        var min = 0, max = 0;\r\n        for (var j = startSample; j < loopEnd; j += sampleSize) {\r\n            var sample = buffer[j];\r\n            // Keep track of positive and negative values separately\r\n            if (sample > max)\r\n                max = sample;\r\n            else if (sample < min)\r\n                min = sample;\r\n        }\r\n        peaks.set([min, max, intervalBorder, 1], i * 4);\r\n    }\r\n    return peaks;\r\n});\r\n\n\n/***/ }),\n\n/***/ \"./src/strategies/rms.ts\":\n/*!*******************************!*\\\n  !*** ./src/strategies/rms.ts ***!\n  \\*******************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Calculate rms values\r\n *\r\n * @export\r\n * @param resolution\r\n * @param samplesPerPixel\r\n * @param width\r\n * @param intervals\r\n * @param scrollPosition\r\n * @param sampleRate\r\n * @param dataMap\r\n * @returns\r\n */\r\nexports.default = (function (options, intervals, dataMap, startPosition, width, shift, lastValue) {\r\n    var sampleSize = Math.ceil(options.samplesPerPixel / options.resolution);\r\n    var start = options.scrollPosition * options.samplesPerPixel;\r\n    var startSecond = start / options.samplerate;\r\n    var secondsPerPixel = options.samplesPerPixel / options.samplerate;\r\n    var calcStartSecond = startSecond + startPosition * secondsPerPixel;\r\n    var calcEndSecond = calcStartSecond + width * secondsPerPixel;\r\n    var absShift = Math.abs(shift) * 4;\r\n    var shiftTarget = shift > 0 ? 0 : absShift;\r\n    var shiftStart = shift > 0 ? absShift : 0;\r\n    var peaks = new Float32Array(lastValue.buffer)\r\n        .copyWithin(shiftTarget, shiftStart)\r\n        .fill(0, startPosition * 4, (startPosition + width) * 4);\r\n    var currentIntervalIndex = intervals.findIndex(function (i) { return i.end > calcStartSecond && i.start + i.offsetStart < calcEndSecond; });\r\n    // There are no intervals in this range so return empty array\r\n    if (currentIntervalIndex === -1) {\r\n        return peaks;\r\n    }\r\n    var maxIntervalIncrementIndex = intervals.length - 1;\r\n    var currentInterval = intervals[currentIntervalIndex];\r\n    var buffer = dataMap.get(currentInterval.source);\r\n    // For each pixel we display\r\n    for (var i = startPosition; i < startPosition + width; i++) {\r\n        var currentSecond = startSecond + i * secondsPerPixel;\r\n        if (currentSecond >= currentInterval.end) {\r\n            if (currentIntervalIndex === maxIntervalIncrementIndex) {\r\n                return peaks;\r\n            }\r\n            else {\r\n                currentInterval = intervals[++currentIntervalIndex];\r\n                buffer = dataMap.get(currentInterval.source);\r\n            }\r\n        }\r\n        if (currentInterval.start + currentInterval.offsetStart > currentSecond) {\r\n            peaks.set([0, 0, 0, 0], i * 4);\r\n            continue;\r\n        }\r\n        var startBorder = currentSecond - secondsPerPixel <\r\n            currentInterval.start + currentInterval.offsetStart;\r\n        var endBorder = currentSecond + secondsPerPixel > currentInterval.end;\r\n        var intervalBorder = startBorder || endBorder ? 1 : 0;\r\n        if (buffer == null) {\r\n            peaks.set([0, 0, intervalBorder, 1], i * 4);\r\n            continue;\r\n        }\r\n        var secondsIntoInterval = currentSecond - currentInterval.start;\r\n        var startSample = Math.floor(secondsIntoInterval * options.samplerate);\r\n        var endSample = startSample + options.samplesPerPixel;\r\n        var length_1 = buffer.length;\r\n        var loopEnd = length_1 < endSample ? length_1 : endSample;\r\n        // Cycle through the data-points relevant to the pixel\r\n        // Don't cycle through more than sampleSize frames per pixel.\r\n        var posSum = 0, negSum = 0, count = 0;\r\n        for (var j = startSample; j < loopEnd; j += sampleSize, count++) {\r\n            var val = buffer[j];\r\n            // Keep track of positive and negative values separately\r\n            if (val > 0) {\r\n                posSum += val * val;\r\n            }\r\n            else {\r\n                negSum += val * val;\r\n            }\r\n        }\r\n        var min = -Math.sqrt(negSum / count);\r\n        var max = Math.sqrt(posSum / count);\r\n        peaks.set([min, max, intervalBorder, 1], i * 4);\r\n    }\r\n    return peaks;\r\n});\r\n\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=waveshaper.js.map","import { defaultConfig, ManagerOptions, ManagerInput } from \"waveshaper\";\r\n\r\nexport type InteractionMode = 'pan' | 'drag' | 'cut' | 'resize';\r\nexport type GenerateId = () => string;\r\nexport type GetTarget = (ev: Event) => HTMLElement;\r\n\r\n\r\nexport interface DomOptions extends ManagerOptions {\r\n    getEventTarget: GetTarget;\r\n    registerSetsActive: boolean;\r\n    height: number;\r\n    generateId: GenerateId;\r\n    mode: InteractionMode;\r\n    clampFn: (n: number) => number;\r\n}\r\n\r\nexport interface DomInput extends ManagerInput {\r\n    getEventTarget?: GetTarget;\r\n    registerSetsActive?: boolean;\r\n    height?: number;\r\n    generateId?: GenerateId;\r\n    mode?: InteractionMode;\r\n    clampFn?: (n: number) => number;\r\n}\r\n\r\nconst defaultDomOptions: DomOptions = {\r\n    ...defaultConfig,\r\n    mode: 'pan',\r\n    height: 150,\r\n    getEventTarget: (ev) => <HTMLElement>ev.target,\r\n    generateId: () => Math.random().toString(),\r\n    registerSetsActive: true,\r\n    clampFn: n => n\r\n}\r\n\r\nexport default defaultDomOptions;","import * as Hammer from 'hammerjs';\r\n\r\nconst hammerOptions: HammerOptions = {\r\n    touchAction : 'pan-y',\r\n    recognizers: [\r\n        [Hammer.Pan, { direction: Hammer.DIRECTION_HORIZONTAL }],\r\n        [Hammer.Pinch, { enable : true }],\r\n        [Hammer.Tap]\r\n    ]\r\n}\r\n\r\nexport default hammerOptions;","import { WaveShaper, AudioInterval } from \"waveshaper\";\r\nimport * as Hammer from \"hammerjs\";\r\n\r\nimport hammerConfig from \"../config/hammerconfig\";\r\nimport cut from \"../interactions/cut\";\r\nimport drag from \"../interactions/drag\";\r\nimport pan from \"../interactions/pan\";\r\nimport zoom from \"../interactions/zoom\";\r\nimport resize from \"../interactions/resize\";\r\nimport line from \"../render/line\";\r\nimport enter from \"../interactions/enter\";\r\nimport defaultDomOptions, { DomInput, DomOptions } from \"../config/dom-config\";\r\nimport { dragState } from \"../models/dragstate\";\r\n\r\n/**\r\n * Extends WaveShapeManager to allow for easy canvas rendering registration.\r\n *\r\n * @inheritDoc\r\n */\r\nexport default class DomRenderWaveShaper extends WaveShaper {\r\n  private unregister = () => {};\r\n\r\n  private unregisterMap = new Map<string, () => void>();\r\n  private canvasMap = new Map<string, () => void>();\r\n\r\n  public get scrollWidth(): number {\r\n    return (\r\n      (this._duration * this._options.samplerate) /\r\n      this._options.samplesPerPixel\r\n    );\r\n  }\r\n\r\n  public get options(): DomOptions {\r\n    return { ...this._options };\r\n  }\r\n  protected _options: DomOptions;\r\n\r\n  public get hammer(): HammerManager | null {\r\n    return this._hammer;\r\n  }\r\n  protected _hammer: HammerManager | null;\r\n\r\n  protected cutCallbacks: ((\r\n    original: AudioInterval,\r\n    left: AudioInterval,\r\n    right: AudioInterval\r\n  ) => void)[] = [];\r\n\r\n  constructor(options: DomInput = defaultDomOptions) {\r\n    super(options);\r\n\r\n    this._options = { ...defaultDomOptions, ...this._options };\r\n  }\r\n\r\n  setOptions(input: DomInput) {\r\n    const oldOptions = { ...this.options };\r\n    this._options = { ...oldOptions, ...input };\r\n\r\n    this.emitOptions(oldOptions, this.options);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @description When a canvas is registered through this method each time the\r\n   * waveform is updated the canvas will be rerendered.\r\n   *\r\n   * It returns an unregister method, call to stop receiving callbacks.\r\n   *\r\n   * @param id WaveShaper id to register to.\r\n   * @param canvas Canvas to render to\r\n   * @param color Background color of segments\r\n   */\r\n  registerCanvas(\r\n    id: string,\r\n    canvas: HTMLCanvasElement,\r\n    color: string\r\n  ): DomRenderWaveShaper {\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (ctx == null) throw Error(\"Cannot get context from canvas.\");\r\n\r\n    // Add classes and data attributes\r\n    canvas.classList.add(\"waveshaper\");\r\n    canvas.setAttribute(\"data-wave-id\", id);\r\n\r\n    canvas.style.width = this.options.width + \"px\";\r\n    canvas.style.height = this.options.height + \"px\";\r\n\r\n    const scale = (devicePixelRatio || 1) < 1 ? 1 : devicePixelRatio || 1;\r\n\r\n    canvas.width = this.options.width * scale;\r\n    canvas.height = this.options.height;\r\n\r\n    ctx.scale(scale, 1);\r\n\r\n    const callBack = (options: DomOptions, data: Float32Array) =>\r\n      line(data, options, ctx, color);\r\n    this.on(id, callBack);\r\n\r\n    this.unregisterCanvas(id);\r\n\r\n    this.canvasMap.set(id, () => this.off(id, callBack));\r\n\r\n    const unregister = enter(this, canvas, dragState);\r\n    this.unregisterMap.set(id, unregister);\r\n\r\n    // If registerSetsActive is true\r\n    if (this._options.registerSetsActive) {\r\n      this.setActive(...this.activeWaveShapers.concat(id));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clears the callbacks associated with this canvas\r\n   *\r\n   * @param id\r\n   * @returns Instance of WaveShaper\r\n   */\r\n  unregisterCanvas(id: string): DomRenderWaveShaper {\r\n    const unregister = this.canvasMap.get(id);\r\n    if (unregister != null) {\r\n      unregister();\r\n      this.canvasMap.delete(id);\r\n    }\r\n\r\n    const unregisterEvents = this.unregisterMap.get(id);\r\n    if (unregisterEvents != null) {\r\n      unregisterEvents();\r\n      this.unregisterMap.delete(id);\r\n    }\r\n\r\n    if (this._options.registerSetsActive) {\r\n      const index = this.activeWaveShapers.indexOf(id);\r\n      if (index != -1) {\r\n        this.setActive(\r\n          ...this.activeWaveShapers.filter(trackId => trackId !== id)\r\n        );\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  emitCut(original: AudioInterval, left: AudioInterval, right: AudioInterval) {\r\n    this.cutCallbacks.forEach(cb => cb(original, left, right));\r\n  }\r\n\r\n  onCut(\r\n    cb: (\r\n      original: AudioInterval,\r\n      left: AudioInterval,\r\n      right: AudioInterval\r\n    ) => void\r\n  ) {\r\n    this.cutCallbacks.push(cb);\r\n  }\r\n\r\n  /**\r\n   * Loads and saves a set of url's to audio files.\r\n   *\r\n   * @param ctx\r\n   * @param data\r\n   */\r\n  loadData(\r\n    ctx: AudioContext,\r\n    ...data: { id: string; url: string }[]\r\n  ): DomRenderWaveShaper {\r\n    data.forEach(dat => {\r\n      fetch(dat.url)\r\n        .then(res => res.arrayBuffer())\r\n        .then(arrayBuffer => ctx.decodeAudioData(arrayBuffer))\r\n        .then(audioBuffer => {\r\n          this.setData({\r\n            id: dat.id,\r\n            data: audioBuffer.getChannelData(0)\r\n          }).process();\r\n        })\r\n        .catch(e => console.log(e));\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  setInteraction(element: HTMLElement) {\r\n    if (element == null)\r\n      throw Error(\"Interaction container element could not be found.\");\r\n    this.unregister();\r\n\r\n    element.setAttribute(\"touch-action\", \"none\");\r\n\r\n    const hammer = new Hammer(element, hammerConfig);\r\n    this._hammer = hammer;\r\n\r\n    drag(this, hammer, dragState);\r\n    cut(this, hammer);\r\n    pan(this, hammer);\r\n    zoom(this, hammer);\r\n    resize(this, hammer);\r\n\r\n    this.unregister = () => {\r\n      hammer.destroy();\r\n    };\r\n\r\n    return this;\r\n  }\r\n\r\n  clearInteraction() {\r\n    this.unregister();\r\n    this.unregister = () => {};\r\n\r\n    this._hammer = null;\r\n  }\r\n}\r\n","import DomRenderWaveShaper from './core/domrender-waveshaper';\r\n\r\nexport {\r\n    DomRenderWaveShaper\r\n}\r\n\r\nexport default new DomRenderWaveShaper();","import { AudioInterval } from \"waveshaper\";\r\nimport DomRenderWaveShaper from \"../core/domrender-waveshaper\";\r\nimport { DomOptions } from \"../config/dom-config\";\r\n\r\n/**\r\n * Adds drag functionality to waveshaper\r\n *\r\n * @param manager\r\n * @param hammer\r\n */\r\nexport default (manager: DomRenderWaveShaper, hammer: HammerManager) => {\r\n  const shouldHandle = (target: HTMLElement, options: DomOptions) =>\r\n    options.mode === \"cut\" && target.hasAttribute(\"data-wave-id\");\r\n\r\n  hammer.on(\"tap\", (ev: HammerInput) => {\r\n    const options = manager.options;\r\n    const target = manager.options.getEventTarget(ev.srcEvent);\r\n    if (options == null || !shouldHandle(target, options)) return;\r\n\r\n    // Allready checked for null\r\n    const id = <string>target.getAttribute(\"data-wave-id\");\r\n\r\n    const wave = manager.getTrack(id);\r\n    if (wave == null) return;\r\n\r\n    const bb = target.getBoundingClientRect();\r\n    const deltaX = ev.center.x - bb.left;\r\n    let time =\r\n      (options.scrollPosition + deltaX) *\r\n      (options.samplesPerPixel / options.samplerate);\r\n\r\n    time = options.clampFn(time);\r\n\r\n    const interval = wave.flattened.find(\r\n      i => i.start + i.offsetStart <= time && i.end >= time\r\n    );\r\n    if (interval == null) return;\r\n\r\n    const left = wave.intervals.find(s => s.id === interval.id);\r\n    if (left == null) return;\r\n\r\n    const original = { ...left };\r\n\r\n    const right: AudioInterval = {\r\n      ...left,\r\n      offsetStart: time - left.start,\r\n      id: options.generateId()\r\n    };\r\n\r\n    left.end = time;\r\n    wave.intervals.push(right);\r\n\r\n    manager.flatten([wave.id]);\r\n    manager.process([wave.id], deltaX, 1);\r\n\r\n    manager.emitCut({ ...original }, { ...left }, { ...right });\r\n  });\r\n};\r\n","import DomRenderWaveShaper from '../core/domrender-waveshaper';\r\nimport { DomOptions } from '../config/dom-config';\r\nimport { DragState } from '../models/dragstate';\r\n\r\n/**\r\n * Adds drag functionality to waveshaper\r\n * \r\n * @param manager Waveshape Manager\r\n * @param hammer Hammer instance\r\n * @param container Container element\r\n */\r\nexport default (manager: DomRenderWaveShaper, hammer: HammerManager, dragState: DragState) => {\r\n\r\n    const shouldHandle = (target: HTMLElement, options: DomOptions) => options.mode === 'drag' && target.hasAttribute('data-wave-id');\r\n\r\n    /**\r\n     * Sets up the drag by finding the \r\n     */\r\n    hammer.on('panstart', (ev: HammerInput) => {\r\n        const options = manager.options;\r\n        const target = manager.options.getEventTarget(ev.srcEvent);\r\n        if (!shouldHandle(target, options))\r\n            return;\r\n\r\n        // Allready checked for existance\r\n        const id = <string>target.getAttribute('data-wave-id');\r\n\r\n        const wave = manager.getTrack(id);\r\n        if(wave == null) return;\r\n\r\n        const bb = target.getBoundingClientRect();\r\n        const time = (options.scrollPosition + (ev.center.x - bb.left)) * (options.samplesPerPixel / options.samplerate);\r\n        const interval = wave.flattened.find(i => i.start + i.offsetStart <= time && i.end >= time);\r\n\r\n        if (interval == null)\r\n            return;\r\n\r\n        const segment = wave.intervals.find(s => s.id === interval.id);\r\n        if(segment == null) return;\r\n\r\n        dragState.startState = { ...segment };\r\n\r\n        if(ev.srcEvent instanceof PointerEvent) { \r\n            target.setPointerCapture(ev.srcEvent.pointerId);\r\n        }\r\n\r\n        dragState.options = options;\r\n\r\n        dragState.activeSegment = segment;\r\n        dragState.activeSegmentStart = dragState.activeSegment.start;\r\n        dragState.duration = segment.end - segment.start;\r\n\r\n        dragState.activeSegment.index = 1000;\r\n        dragState.dragWave = wave;\r\n    });\r\n\r\n    hammer.on('panmove', (ev: HammerInput) => {\r\n        const target = manager.options.getEventTarget(ev.srcEvent);\r\n        if (dragState.options == null || dragState.activeSegment == null || dragState.dragWave == null \r\n            || dragState.dragging || !shouldHandle(target, dragState.options))\r\n            return;\r\n\r\n        dragState.dragging = true;\r\n\r\n        /** \r\n         * TODO below implementation stops all updates on touch devices on new track (tested on Samsung Galaxy s8),\r\n         * when dragged back to original keeps working. Works on desktop, it's a small performance improvement as\r\n         * it prevents a single track flatten + process when transferring a segment between tracks.\r\n         */\r\n\r\n        //// If the target has moved it is handled by the mouseHover function\r\n        // const id = ev.target.getAttribute('data-wave-id');\r\n        // if(id !== dragState.dragWave.id)\r\n        //     return;\r\n\r\n        const change = (ev.deltaX * dragState.options.samplesPerPixel) / dragState.options.samplerate;\r\n        let newTime = dragState.activeSegmentStart + change;\r\n\r\n        newTime = manager.options.clampFn(newTime);\r\n\r\n        if (newTime + dragState.activeSegment.offsetStart < 0) {\r\n            newTime = -dragState.activeSegment.offsetStart;\r\n        }\r\n\r\n        dragState.activeSegment.start = newTime;\r\n        dragState.activeSegment.end = newTime + dragState.duration;\r\n\r\n        manager.flatten([dragState.dragWave.id]);\r\n        manager.process([dragState.dragWave.id]);\r\n\r\n        dragState.dragging = false;\r\n    });\r\n\r\n    hammer.on('panend', (ev: HammerInput) => {\r\n        const target = manager.options.getEventTarget(ev.srcEvent);\r\n        if (dragState.options == null || !shouldHandle(target, dragState.options))\r\n            return;\r\n\r\n        if(dragState.startState != null && dragState.activeSegment != null) \r\n            manager.emitSegment(dragState.startState, { ...dragState.activeSegment });\r\n\r\n        dragState.activeSegment = null;\r\n        dragState.activeSegmentStart = 0;\r\n        dragState.dragWave = null;\r\n        dragState.options = null;\r\n        dragState.duration = 0;\r\n        dragState.startState = null;\r\n    });\r\n}","import { DragState } from \"../models/dragstate\";\r\nimport DomRenderWaveShaper from '../core/domrender-waveshaper';\r\n\r\nexport default (manager: DomRenderWaveShaper, canvas: HTMLCanvasElement, dragState: DragState): () => void => {\r\n\r\n    const enterlistener = (ev: PointerEvent) => pointerEnter(ev);\r\n\r\n\r\n    /**\r\n     * Fires when the mouse moves over the container,\r\n     * If a segment is being dragged and the pointer moves\r\n     * into another canvas the segment is tranfered to the \r\n     * new canvas.\r\n     */\r\n    canvas.addEventListener('pointermove', enterlistener);\r\n\r\n    const destroy = () => {\r\n        canvas.removeEventListener('pointermove', enterlistener);\r\n    }\r\n\r\n    const pointerEnter = (ev: PointerEvent) => {\r\n        if (dragState.options == null || dragState.options.mode !== 'drag')\r\n            return;\r\n\r\n        if(dragState.activeSegment == null || dragState.dragWave == null)\r\n            return;\r\n\r\n        const canvas = document.elementFromPoint(ev.clientX, ev.clientY);\r\n        if (canvas == null || !(canvas instanceof HTMLCanvasElement))\r\n            return;\r\n\r\n        const id = canvas.getAttribute('data-wave-id');\r\n        if (id == null) return;\r\n\r\n        const wave = manager.getTrack(id);\r\n        if (wave == null) return;\r\n\r\n        if (dragState.dragWave.id !== id) {\r\n            const index = dragState.dragWave.intervals.indexOf(dragState.activeSegment);\r\n            dragState.dragWave.intervals.splice(index, 1);\r\n\r\n            dragState.activeSegment.trackId = wave.id;\r\n            wave.intervals.push(dragState.activeSegment);\r\n\r\n            dragState.activeSegment.index = 1000;\r\n\r\n            const currentId = dragState.dragWave.id;\r\n            dragState.dragWave = wave;\r\n\r\n            manager.flatten([wave.id, currentId]);\r\n            manager.process([wave.id, currentId]);\r\n        }\r\n    }\r\n\r\n    return destroy;\r\n}","import DomRenderWaveShaper from '../core/domrender-waveshaper';\r\nimport { DomOptions } from '../config/dom-config';\r\n\r\nconst endMargin = 500;\r\n\r\ninterface PanState {\r\n    panStart: number;\r\n    panMax: number;\r\n    options: DomOptions | null;\r\n}\r\n\r\nconst panState: PanState = {\r\n    panStart: 0,\r\n    panMax: 0,\r\n    options: null\r\n}\r\n\r\n/**\r\n * Adds pan functionality to waveshaper\r\n * \r\n * @param manager\r\n * @param hammer\r\n */\r\nexport default function(manager: DomRenderWaveShaper, hammer: HammerManager) {\r\n\r\n    const shouldHandle = (target: HTMLElement, options: DomOptions) => options.mode === 'pan' && target.hasAttribute('data-wave-id');\r\n\r\n    hammer.on('panstart', (ev) => { \r\n        const options = manager.options;\r\n        const target = manager.options.getEventTarget(ev.srcEvent);\r\n        if(!shouldHandle(target, options))\r\n            return;\r\n\r\n        if(ev.srcEvent instanceof PointerEvent) { \r\n            target.setPointerCapture(ev.srcEvent.pointerId);\r\n        }\r\n\r\n        panState.panMax = manager.scrollWidth + endMargin;\r\n        panState.panStart = options.scrollPosition;\r\n    });\r\n\r\n    hammer.on('panmove', (ev) =>  {\r\n        panState.options = manager.options;\r\n        const target = manager.options.getEventTarget(ev.srcEvent);\r\n\r\n        if(!shouldHandle(target, panState.options))\r\n            return;\r\n\r\n        const position = panState.panStart - ev.deltaX;\r\n        const newPosition = Math.floor(position > 0 ? position : 0);\r\n        const change = newPosition - panState.options.scrollPosition;\r\n\r\n        // If it was and is still 0 no need to update\r\n        if(newPosition === panState.options.scrollPosition)\r\n            return;\r\n\r\n        if(newPosition > panState.panMax - panState.options.width)\r\n            return;\r\n        \r\n        const start = change > 0 ? panState.options.width - change : 0;\r\n        const width = Math.abs(change);\r\n        \r\n        manager.setOptions({ scrollPosition: newPosition }).process(undefined, start, width, change);\r\n    });\r\n\r\n    hammer.on('panend', (ev) => {\r\n        const target = manager.options.getEventTarget(ev.srcEvent);\r\n        if(panState.options == null || !shouldHandle(target, panState.options))\r\n            return;\r\n\r\n        panState.options = null;\r\n        panState.panStart = 0;\r\n        panState.panMax = 0;\r\n    });\r\n}","import { AudioInterval, Track } from \"waveshaper\";\r\nimport DomRenderWaveShaper from \"../core/domrender-waveshaper\";\r\nimport { DomOptions } from \"../config/dom-config\";\r\n\r\ndeclare type SegmentSide = \"left\" | \"right\";\r\n\r\ninterface ResizeState {\r\n  activeSegment: AudioInterval | null;\r\n  activeSegmentSide: SegmentSide | null;\r\n  activeSegmentOffsetStart: number;\r\n  activeSegmentOffsetEnd: number;\r\n  dragWave: Track | null;\r\n  options: DomOptions | null;\r\n  startState: AudioInterval | null;\r\n}\r\n\r\nconst resizeState: ResizeState = {\r\n  activeSegment: null,\r\n  activeSegmentSide: null,\r\n  activeSegmentOffsetStart: 0,\r\n  activeSegmentOffsetEnd: 0,\r\n  dragWave: null,\r\n  options: null,\r\n  startState: null\r\n};\r\n\r\n/**\r\n * Adds drag functionality to waveshaper\r\n *\r\n * @param manager\r\n * @param hammer\r\n */\r\nexport default function(manager: DomRenderWaveShaper, hammer: HammerManager) {\r\n  const shouldHandle = (target: HTMLElement, options: DomOptions) =>\r\n    options.mode === \"resize\" &&\r\n    target != null &&\r\n    target.hasAttribute(\"data-wave-id\");\r\n\r\n  hammer.on(\"panstart\", ev => {\r\n    const options = manager.options;\r\n    const target = manager.options.getEventTarget(ev.srcEvent);\r\n\r\n    if (!shouldHandle(target, options)) return;\r\n\r\n    // Already checked that it exists\r\n    const id = <string>target.getAttribute(\"data-wave-id\");\r\n\r\n    const wave = manager.getTrack(id);\r\n    if (wave == null) return;\r\n\r\n    const bb = target.getBoundingClientRect();\r\n    const time =\r\n      ((options.scrollPosition + (ev.center.x - bb.left)) *\r\n        options.samplesPerPixel) /\r\n      options.samplerate;\r\n\r\n    const interval = wave.flattened.find(\r\n      i => i.start + i.offsetStart <= time && i.end >= time\r\n    );\r\n\r\n    if (interval == null) return;\r\n\r\n    resizeState.activeSegmentSide =\r\n      time <\r\n      interval.start +\r\n        interval.offsetStart +\r\n        (interval.end - (interval.start + interval.offsetStart)) / 2\r\n        ? \"left\"\r\n        : \"right\";\r\n\r\n    const segment = wave.intervals.find(s => s.id === interval.id);\r\n    if (segment == null) return;\r\n\r\n    resizeState.startState = { ...segment };\r\n\r\n    if (ev.srcEvent instanceof PointerEvent) {\r\n      target.setPointerCapture(ev.srcEvent.pointerId);\r\n    }\r\n\r\n    resizeState.options = options;\r\n    resizeState.activeSegment = segment;\r\n\r\n    resizeState.activeSegmentOffsetStart = segment.offsetStart;\r\n    resizeState.activeSegmentOffsetEnd = segment.end;\r\n\r\n    segment.index = 1000;\r\n    resizeState.dragWave = wave;\r\n  });\r\n\r\n  hammer.on(\"panmove\", ev => {\r\n    const target = manager.options.getEventTarget(ev.srcEvent);\r\n    if (\r\n      resizeState.dragWave == null ||\r\n      resizeState.activeSegment == null ||\r\n      resizeState.options == null ||\r\n      !shouldHandle(target, resizeState.options)\r\n    )\r\n      return;\r\n\r\n    const options = manager.options;\r\n\r\n    const change = (ev.deltaX * options.samplesPerPixel) / options.samplerate;\r\n    let newTime =\r\n      resizeState.activeSegmentSide === \"left\"\r\n        ? resizeState.activeSegmentOffsetStart + change\r\n        : resizeState.activeSegmentOffsetEnd + change;\r\n\r\n    newTime = options.clampFn(newTime);\r\n    // Don't allow offset to become less than 0\r\n    if (newTime < 0) {\r\n      newTime = 0;\r\n    }\r\n\r\n    const active = resizeState.activeSegment;\r\n    const newDuration =\r\n      resizeState.activeSegmentSide === \"left\"\r\n        ? active.end - active.start - newTime\r\n        : newTime - active.start - active.offsetStart;\r\n\r\n    // Do not allow resizing\r\n    if (newDuration <= 2) {\r\n      return;\r\n    }\r\n\r\n    resizeState.activeSegmentSide === \"left\"\r\n      ? (active.offsetStart = newTime)\r\n      : (active.end = newTime);\r\n\r\n    manager.flatten([resizeState.dragWave.id]);\r\n    manager.process([resizeState.dragWave.id]);\r\n  });\r\n\r\n  hammer.on(\"panend\", ev => {\r\n    const target = manager.options.getEventTarget(ev.srcEvent);\r\n    if (\r\n      resizeState.options == null ||\r\n      !shouldHandle(target, resizeState.options)\r\n    )\r\n      return;\r\n\r\n    if (resizeState.startState != null && resizeState.activeSegment != null)\r\n      manager.emitSegment(resizeState.startState, {\r\n        ...resizeState.activeSegment\r\n      });\r\n\r\n    resizeState.activeSegment = null;\r\n    resizeState.activeSegmentOffsetStart = 0;\r\n    resizeState.activeSegmentOffsetEnd = 0;\r\n    resizeState.activeSegmentSide = null;\r\n    resizeState.dragWave = null;\r\n    resizeState.options = null;\r\n    resizeState.startState = null;\r\n  });\r\n}\r\n","import DomRenderWaveShaper from '../core/domrender-waveshaper';\r\nimport { DomOptions } from '../config/dom-config';\r\n\r\nconst endMargin = 500;\r\n\r\ninterface ZoomState {\r\n    maxWidth: number;\r\n    sppStart: number;\r\n    options: DomOptions | null;\r\n}\r\n\r\nconst zoomState: ZoomState = {\r\n    maxWidth: 0,\r\n    sppStart: 0,\r\n    options: null\r\n}\r\n\r\n/**\r\n * Adds pinch zoom functionality to waveshaper\r\n * \r\n * @param manager\r\n * @param hammer\r\n */\r\nexport default function(manager: DomRenderWaveShaper, hammer: HammerManager) {\r\n\r\n    const shouldHandle = (target: HTMLElement, options: DomOptions) => options.mode === 'pan' && target.hasAttribute('data-wave-id');\r\n\r\n    hammer.on('pinchstart', (ev) => {\r\n        const options = manager.options;\r\n        const target = manager.options.getEventTarget(ev.srcEvent);\r\n        if(!shouldHandle(target, options))\r\n            return;\r\n\r\n        if(ev.srcEvent instanceof PointerEvent) { \r\n            target.setPointerCapture(ev.srcEvent.pointerId);\r\n        }\r\n\r\n        zoomState.sppStart = options.samplesPerPixel;\r\n        zoomState.maxWidth = manager.scrollWidth + endMargin;\r\n    });\r\n\r\n    hammer.on('pinchmove', (ev) => {\r\n        zoomState.options = manager.options;\r\n        const target = manager.options.getEventTarget(ev.srcEvent);\r\n        if(zoomState.options == null || !shouldHandle(target, zoomState.options) || ev.scale == null || ev.scale <= 0)\r\n            return;\r\n\r\n        const sampleAtLeft = zoomState.options.scrollPosition * zoomState.options.samplesPerPixel;\r\n        const samplesInView = zoomState.options.width * zoomState.options.samplesPerPixel;\r\n        const samplesToCenter = samplesInView / 2;\r\n\r\n        const newSpp = zoomState.sppStart * ev.scale;\r\n        if(newSpp == 0) return;\r\n\r\n        const newSamplesInView = zoomState.options.width * newSpp;\r\n        const newSamplesToCenter = newSamplesInView / 2;\r\n\r\n        const maxWidth = manager.scrollWidth + endMargin;\r\n        const maxSamplesInView = maxWidth  * zoomState.options.samplerate;\r\n\r\n        if(newSamplesInView >= maxSamplesInView)\r\n            return;\r\n\r\n        const newScroll = (sampleAtLeft + samplesToCenter - newSamplesToCenter) / newSpp;\r\n\r\n        manager.setOptions({\r\n            samplesPerPixel: newSpp,\r\n            scrollPosition: newScroll >= 0 ? newScroll : 0\r\n        }).process();\r\n    });\r\n\r\n    hammer.on('pinchend', (ev) => {\r\n        const target = manager.options.getEventTarget(ev.srcEvent);\r\n        if(zoomState.options == null || !shouldHandle(target, zoomState.options))\r\n            return;\r\n\r\n        zoomState.sppStart = 0;\r\n        zoomState.maxWidth = 0;\r\n        zoomState.options = null;\r\n    });\r\n}","import { AudioInterval, Track } from \"waveshaper\";\r\nimport { DomOptions } from \"../config/dom-config\";\r\n\r\nexport interface DragState {\r\n  activeSegment: AudioInterval | null;\r\n  activeSegmentStart: number;\r\n  dragWave: Track | null;\r\n  options: DomOptions | null;\r\n  duration: number;\r\n  dragging: boolean;\r\n  startState: AudioInterval | null;\r\n}\r\n\r\nexport const dragState: DragState = {\r\n  activeSegment: null,\r\n  activeSegmentStart: 0,\r\n  dragWave: null,\r\n  options: null,\r\n  duration: 0,\r\n  dragging: false,\r\n  startState: null\r\n};\r\n","import { DomOptions } from \"../config/dom-config\";\r\n\r\n/**\r\n * \r\n * \r\n * @export\r\n * @param waveform Sampled data for each pixel, max at 0, min at 1 \r\n * @param options\r\n * @param ctx \r\n * @param color\r\n */\r\nexport default (waveform: Float32Array, options: DomOptions, ctx: CanvasRenderingContext2D, color: string) => {\r\n    const scale = options.height / 2;\r\n    const width = options.width;\r\n    \r\n    ctx.fillStyle = color;\r\n    ctx.clearRect(0, 0, width, options.height);\r\n    \r\n    for(let i = 0, inSegment = false, segmentStart = 0; i < width; i++) {\r\n        const index = i * 4;\r\n        const pointInSegment = waveform[index + 3] === 1;\r\n        if(!inSegment && pointInSegment) {\r\n            inSegment = true;\r\n            segmentStart = i;\r\n        } else if (inSegment && (!pointInSegment || i === width - 1)) {\r\n            inSegment = false;\r\n            ctx.fillRect(segmentStart, 0, i - segmentStart, options.height);\r\n        }\r\n    }\r\n    \r\n    ctx.fillStyle = 'black';\r\n    ctx.beginPath();\r\n    \r\n    ctx.moveTo(0, scale);\r\n    for (let i = 0; i < width; i++) {\r\n        const index = i * 4;\r\n\r\n        ctx.lineTo(i, Math.round((waveform[index] * scale) + scale));\r\n    }\r\n    ctx.lineTo(width - 1, scale);\r\n\r\n    ctx.moveTo(0, scale);\r\n    for (let i = 0; i < width; i++) {\r\n        const index = i * 4;\r\n\r\n        ctx.lineTo(i, Math.round((waveform[index + 1] * scale) + scale));\r\n    }\r\n    ctx.lineTo(width - 1, scale);\r\n    ctx.closePath();\r\n\r\n    for (let i = 0; i < width; i++) {\r\n        const index = i * 4;\r\n        if(waveform[index - 4 + 2] === 0 && waveform[index + 2] === 1) {\r\n            ctx.rect(i, 0, 1, options.height);\r\n        }\r\n    }\r\n    \r\n    ctx.fill();\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE_hammerjs__;"],"sourceRoot":""}